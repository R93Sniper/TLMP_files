(global unit lfp_00 none) (global unit lfp_01 none) (global unit lfp_02 none) (global unit lfp_03 none)
(global unit lfp_04 none) (global unit lfp_05 none) (global unit lfp_06 none) (global unit lfp_07 none)
(global unit lfp_08 none) (global unit lfp_09 none) (global unit lfp_10 none) (global unit lfp_11 none)
(global unit lfp_12 none) (global unit lfp_13 none) (global unit lfp_14 none) (global unit lfp_15 none)

;; LFP = last frame player. stores previous frames player list in a static function
;; we compare this list to the current frame and if a player isn't in it they *must* be a newly spawned player. we then give them grenades if the gametype settings have not given them forced default grenade starts.
(script static unit (get_lfp (short INDEX))
	(if (= 0 INDEX) (set return_unit lfp_00))
	(if (= 1 INDEX) (set return_unit lfp_01))
	(if (= 2 INDEX) (set return_unit lfp_02))
	(if (= 3 INDEX) (set return_unit lfp_03))
	(if (= 4 INDEX) (set return_unit lfp_04))
	(if (= 5 INDEX) (set return_unit lfp_05))
	(if (= 6 INDEX) (set return_unit lfp_06))
	(if (= 7 INDEX) (set return_unit lfp_07))
	(if (= 8 INDEX) (set return_unit lfp_08))
	(if (= 9 INDEX) (set return_unit lfp_09))
	(if (= 10 INDEX) (set return_unit lfp_10))
	(if (= 11 INDEX) (set return_unit lfp_11))
	(if (= 12 INDEX) (set return_unit lfp_12))
	(if (= 13 INDEX) (set return_unit lfp_13))
	(if (= 14 INDEX) (set return_unit lfp_14))
	(if (= 15 INDEX) (set return_unit lfp_15))
	return_unit
)

(script static void update_lfp
	(set lfp_00 (unit (list_get var_players 0)))
	(set lfp_01 (unit (list_get var_players 1)))
	(set lfp_02 (unit (list_get var_players 2)))
	(set lfp_03 (unit (list_get var_players 3)))
	(set lfp_04 (unit (list_get var_players 4)))
	(set lfp_05 (unit (list_get var_players 5)))
	(set lfp_06 (unit (list_get var_players 6)))
	(set lfp_07 (unit (list_get var_players 7)))
	(set lfp_08 (unit (list_get var_players 8)))
	(set lfp_09 (unit (list_get var_players 9)))
	(set lfp_10 (unit (list_get var_players 10)))
	(set lfp_11 (unit (list_get var_players 11)))
	(set lfp_12 (unit (list_get var_players 12)))
	(set lfp_13 (unit (list_get var_players 13)))
	(set lfp_14 (unit (list_get var_players 14)))
	(set lfp_15 (unit (list_get var_players 15)))
)

(global unit ggp_00 none) (global unit ggp_01 none) (global unit ggp_02 none) (global unit ggp_03 none)
(global unit ggp_04 none) (global unit ggp_05 none) (global unit ggp_06 none) (global unit ggp_07 none)
(global unit ggp_08 none) (global unit ggp_09 none) (global unit ggp_10 none) (global unit ggp_11 none)
(global unit ggp_12 none) (global unit ggp_13 none) (global unit ggp_14 none) (global unit ggp_15 none)


;; GGP = give grenade player. this is pseudo-queue. stores up to 16 players here who need plasma grenades after spawning. plasma grenades are handed out 2 frames after spawning so that the frag grenade is the default selected grenade type
;; if you give frags and plasma on the same frame plasma becomes default selected which is unintuitive
;; it is theoretically impossible for this entire function to fill so 16 slots is enough unless you like... killed 16 players 2 frames apart and then the first player spawned in before the global delay timer finished. *basically* impossible.
(script static unit (dequeue_ggp (short INDEX))
	(if (= 0 INDEX) (begin (set return_unit ggp_00) (set ggp_00 none)))
	(if (= 1 INDEX) (begin (set return_unit ggp_01) (set ggp_01 none)))
	(if (= 2 INDEX) (begin (set return_unit ggp_02) (set ggp_02 none)))
	(if (= 3 INDEX) (begin (set return_unit ggp_03) (set ggp_03 none)))
	(if (= 4 INDEX) (begin (set return_unit ggp_04) (set ggp_04 none)))
	(if (= 5 INDEX) (begin (set return_unit ggp_05) (set ggp_05 none)))
	(if (= 6 INDEX) (begin (set return_unit ggp_06) (set ggp_06 none)))
	(if (= 7 INDEX) (begin (set return_unit ggp_07) (set ggp_07 none)))
	(if (= 8 INDEX) (begin (set return_unit ggp_08) (set ggp_08 none)))
	(if (= 9 INDEX) (begin (set return_unit ggp_09) (set ggp_09 none)))
	(if (= 10 INDEX) (begin (set return_unit ggp_10) (set ggp_10 none)))
	(if (= 11 INDEX) (begin (set return_unit ggp_11) (set ggp_11 none)))
	(if (= 12 INDEX) (begin (set return_unit ggp_12) (set ggp_12 none)))
	(if (= 13 INDEX) (begin (set return_unit ggp_13) (set ggp_13 none)))
	(if (= 14 INDEX) (begin (set return_unit ggp_14) (set ggp_14 none)))
	(if (= 15 INDEX) (begin (set return_unit ggp_15) (set ggp_15 none)))
	return_unit
)

(global boolean is_queued false)
(script static void (queue_ggp (unit PLAYER))
	(set is_queued false)
	(if (and (not is_queued) (= ggp_00 none)) (begin (set is_queued true) (set ggp_00 PLAYER)))
	(if (and (not is_queued) (= ggp_01 none)) (begin (set is_queued true) (set ggp_01 PLAYER)))
	(if (and (not is_queued) (= ggp_02 none)) (begin (set is_queued true) (set ggp_02 PLAYER)))
	(if (and (not is_queued) (= ggp_03 none)) (begin (set is_queued true) (set ggp_03 PLAYER)))
	(if (and (not is_queued) (= ggp_04 none)) (begin (set is_queued true) (set ggp_04 PLAYER)))
	(if (and (not is_queued) (= ggp_05 none)) (begin (set is_queued true) (set ggp_05 PLAYER)))
	(if (and (not is_queued) (= ggp_06 none)) (begin (set is_queued true) (set ggp_06 PLAYER)))
	(if (and (not is_queued) (= ggp_07 none)) (begin (set is_queued true) (set ggp_07 PLAYER)))
	(if (and (not is_queued) (= ggp_08 none)) (begin (set is_queued true) (set ggp_08 PLAYER)))
	(if (and (not is_queued) (= ggp_09 none)) (begin (set is_queued true) (set ggp_09 PLAYER)))
	(if (and (not is_queued) (= ggp_10 none)) (begin (set is_queued true) (set ggp_10 PLAYER)))
	(if (and (not is_queued) (= ggp_11 none)) (begin (set is_queued true) (set ggp_11 PLAYER)))
	(if (and (not is_queued) (= ggp_12 none)) (begin (set is_queued true) (set ggp_12 PLAYER)))
	(if (and (not is_queued) (= ggp_13 none)) (begin (set is_queued true) (set ggp_13 PLAYER)))
	(if (and (not is_queued) (= ggp_14 none)) (begin (set is_queued true) (set ggp_14 PLAYER)))
	(if (and (not is_queued) (= ggp_15 none)) (begin (set is_queued true) (set ggp_15 PLAYER)))
	(set grenade_plasma_delay 3)
)

;; magic timer to prevent plasma grenades being selected as the default type when respawning. i want frags as the inital greande selected for players
;; this is a global delay so whenever a player spawns it delays 2 frames before handing out plasmas. individual timers for each player would be better but would require way more code. this is "good enough"
(global short grenade_plasma_delay 0)

(script static void update_grenades
	(update_grenade 0)
	(update_grenade 1)
	(update_grenade 2)
	(update_grenade 3)
	(update_grenade 4)
	(update_grenade 5)
	(update_grenade 6)
	(update_grenade 7)
	(update_grenade 8)
	(update_grenade 9)
	(update_grenade 10)
	(update_grenade 11)
	(update_grenade 12)
	(update_grenade 13)
	(update_grenade 14)
	(update_grenade 15)

	(update_lfp)

	(if (= grenade_plasma_delay 1) (begin
		(set grenade_plasma_delay 0)
		
		(update_delayed 0)
		(update_delayed 1)
		(update_delayed 2)
		(update_delayed 3)
		(update_delayed 4)
		(update_delayed 5)
		(update_delayed 6)
		(update_delayed 7)
		(update_delayed 8)
		(update_delayed 9)
		(update_delayed 10)
		(update_delayed 11)
		(update_delayed 12)
		(update_delayed 13)
		(update_delayed 14)
		(update_delayed 15)
	))
	(if (> grenade_plasma_delay 1) (set grenade_plasma_delay (- grenade_plasma_delay 1)))
)

(script static void (update_grenade (short INDEX))
	(set update_player_grenade (unit (list_get var_players INDEX)))

	(if (and
		(not (= update_player_grenade none))
		(not (exists_lfp update_player_grenade))
	) (begin
		(player_set_grenade update_player_grenade custom_starting_grenade_frag)
	))
)

(script static boolean (exists_lfp (unit PLAYER))
	(set return_bool false)
	(if (= PLAYER (get_lfp 0)) (set return_bool true))
	(if (= PLAYER (get_lfp 1)) (set return_bool true))
	(if (= PLAYER (get_lfp 2)) (set return_bool true))
	(if (= PLAYER (get_lfp 3)) (set return_bool true))
	(if (= PLAYER (get_lfp 4)) (set return_bool true))
	(if (= PLAYER (get_lfp 5)) (set return_bool true))
	(if (= PLAYER (get_lfp 6)) (set return_bool true))
	(if (= PLAYER (get_lfp 7)) (set return_bool true))
	(if (= PLAYER (get_lfp 8)) (set return_bool true))
	(if (= PLAYER (get_lfp 9)) (set return_bool true))
	(if (= PLAYER (get_lfp 10)) (set return_bool true))
	(if (= PLAYER (get_lfp 11)) (set return_bool true))
	(if (= PLAYER (get_lfp 12)) (set return_bool true))
	(if (= PLAYER (get_lfp 13)) (set return_bool true))
	(if (= PLAYER (get_lfp 14)) (set return_bool true))
	(if (= PLAYER (get_lfp 15)) (set return_bool true))
	return_bool
)

(global unit update_player_grenade none)
(script static void (player_set_grenade (unit PLAYER) (starting_profile PROFILE))
	(if (<= (unit_get_total_grenade_count PLAYER) 0) (BEGIN
		(player_add_equipment PLAYER PROFILE false)
		(queue_ggp PLAYER)
	))
)

(script static void (update_delayed (short INDEX))
	(set update_player_grenade (dequeue_ggp INDEX))

	(if (and
		(not (= update_player_grenade none))
		(> (unit_get_health update_player_grenade) 0)
	) (begin
		(player_add_equipment update_player_grenade custom_starting_grenade_plasma false)
	))
)